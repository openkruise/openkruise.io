"use strict";(self.webpackChunkopenkruise_io=self.webpackChunkopenkruise_io||[]).push([[2553],{9011:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"user-manuals/basic-usage","title":"Basic Usage Guide","description":"This docs focuses on how to make Kruise Rollout effective and how to make a complete release, and answer some questions about usages.","source":"@site/rollouts/user-manuals/basic-usage.md","sourceDirName":"user-manuals","slug":"/user-manuals/basic-usage","permalink":"/rollouts/user-manuals/basic-usage","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Zhen Zhang","lastUpdatedAt":1752556847000,"frontMatter":{},"sidebar":"rollouts","previous":{"title":"API Specifications","permalink":"/rollouts/user-manuals/api-specifications"},"next":{"title":"Canary Release","permalink":"/rollouts/user-manuals/strategy-canary-update"}}');var s=n(74848),l=n(28453),r=n(65537),a=n(79329);const i={},u="Basic Usage Guide",c={},d=[{value:"A Complete Release Process",id:"a-complete-release-process",level:2},{value:"Step 0: Requirements",id:"step-0-requirements",level:3},{value:"Step 1: Prepare and apply Rollout configuration",id:"step-1-prepare-and-apply-rollout-configuration",level:3},{value:"Step 2: Upgrade Deployment to &quot;version-2&quot; and release the 1-st batch",id:"step-2-upgrade-deployment-to-version-2-and-release-the-1-st-batch",level:3},{value:"Step 3: Continue to release the 2-nd batch",id:"step-3-continue-to-release-the-2-nd-batch",level:3},{value:"Step 4: Continue to release the 3-rd batch",id:"step-4-continue-to-release-the-3-rd-batch",level:3},{value:"How to continue the next step manually?",id:"how-to-continue-the-next-step-manually",level:2},{value:"How to know current step is Ready?",id:"how-to-know-current-step-is-ready",level:2},{value:"How to examine the newly deployed pods",id:"how-to-examine-the-newly-deployed-pods",level:2},{value:"How to do rollback?",id:"how-to-do-rollback",level:2},{value:"1. Apply your old version yaml to kubernetes",id:"1-apply-your-old-version-yaml-to-kubernetes",level:3},{value:"2. Gitops sync old revision",id:"2-gitops-sync-old-revision",level:3},{value:"3. Use kruise-tools",id:"3-use-kruise-tools",level:3},{value:"Other Statements",id:"other-statements",level:2},{value:"Optional: Pausing and Disabling a Rollout",id:"optional-pausing-and-disabling-a-rollout",level:2},{value:"Pausing a Rollout (During Progression)",id:"pausing-a-rollout-during-progression",level:3},{value:"Disabling a Rollout (After Completion)",id:"disabling-a-rollout-after-completion",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"basic-usage-guide",children:"Basic Usage Guide"})}),"\n","\n",(0,s.jsx)(t.p,{children:"This docs focuses on how to make Kruise Rollout effective and how to make a complete release, and answer some questions about usages."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Note: v1beta1 available from Kruise Rollout v0.5.0."})}),"\n",(0,s.jsx)(t.h2,{id:"a-complete-release-process",children:"A Complete Release Process"}),"\n",(0,s.jsx)(t.h3,{id:"step-0-requirements",children:"Step 0: Requirements"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/rollouts/installation",children:"Install"})," Kruise Rollouts."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Assume that you ",(0,s.jsx)(t.strong,{children:"already have a Deployment in your Kubernetes cluster"})," as follows:"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: workload-demo\n  namespace: default\nspec:\n  replicas: 10\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - name: busybox\n        image: busybox:latest\n        command: ["/bin/sh", "-c", "sleep 100d"]\n        env:\n        - name: VERSION\n          value: "version-1"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"step-1-prepare-and-apply-rollout-configuration",children:"Step 1: Prepare and apply Rollout configuration"}),"\n",(0,s.jsx)(t.p,{children:'Assume that you want to use multi-batch update strategy to upgrade your Deployment from "version-1" to "version-2":'}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["In the 1-st batch: ",(0,s.jsx)(t.strong,{children:"Only 1"})," Pod should be upgraded;"]}),"\n",(0,s.jsxs)(t.li,{children:["In the 2-nd batch: ",(0,s.jsx)(t.strong,{children:"50%"})," Pods should be upgraded, i.e., ",(0,s.jsx)(t.strong,{children:"5 updated Pods"}),";"]}),"\n",(0,s.jsxs)(t.li,{children:["In the 3-rd batch: ",(0,s.jsx)(t.strong,{children:"100%"})," Pods should be upgradedm i.e., ",(0,s.jsx)(t.strong,{children:"10 updated Pods"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.A,{children:[(0,s.jsx)(a.A,{value:"v1beta1",label:"v1beta1",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ kubectl apply -f - <<EOF\napiVersion: rollouts.kruise.io/v1beta1\nkind: Rollout\nmetadata:\n  name: rollouts-demo\n  namespace: default\nspec:\n  workloadRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: workload-demo\n  strategy:\n    canary:\n      steps:\n      - replicas: 1\n      - replicas: 50%\n      - replicas: 100%\nEOF\n"})})}),(0,s.jsx)(a.A,{value:"v1alpha1",label:"v1alpha1",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ kubectl apply -f - <<EOF\napiVersion: rollouts.kruise.io/v1alpha1\nkind: Rollout\nmetadata:\n  name: rollouts-demo\n  namespace: default\n  annotations:\n    rollouts.kruise.io/rolling-style: partition\nspec:\n  objectRef:\n    workloadRef:\n      apiVersion: apps/v1\n      kind: Deployment\n      name: workload-demo\n  strategy:\n    canary:\n      steps:\n      - replicas: 1\n      - replicas: 50%\n      - replicas: 100%\nEOF\n"})})})]}),"\n",(0,s.jsx)(t.h3,{id:"step-2-upgrade-deployment-to-version-2-and-release-the-1-st-batch",children:'Step 2: Upgrade Deployment to "version-2" and release the 1-st batch'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'$ kubectl patch deployment workload-demo -p \\\n\'{"spec":{"template":{"spec":{"containers":[{"name":"busybox", "env":[{"name":"VERSION", "value":"version-2"}]}]}}}}\'\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Wait a while, we will see the Deployment status show ",(0,s.jsx)(t.strong,{children:"Only 1 Pod"})," is upgraded.\n",(0,s.jsx)(t.img,{src:n(99924).A+"",width:"1612",height:"370"})]}),"\n",(0,s.jsx)(t.h3,{id:"step-3-continue-to-release-the-2-nd-batch",children:"Step 3: Continue to release the 2-nd batch"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Approve"})," the next batch if everything looks good:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ kubectl-kruise rollout approve rollout/rollouts-demo -n default\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Note: ",(0,s.jsx)(t.a,{href:"https://github.com/openkruise/kruise-tools",children:"kubectl-kruise"})," is also provided by OpenKruise community."]}),"\n",(0,s.jsxs)(t.p,{children:["Wait a while, we will see the Deployment status show ",(0,s.jsx)(t.strong,{children:"5 Pod"})," is upgraded.\n",(0,s.jsx)(t.img,{src:n(50044).A+"",width:"1600",height:"430"})]}),"\n",(0,s.jsx)(t.h3,{id:"step-4-continue-to-release-the-3-rd-batch",children:"Step 4: Continue to release the 3-rd batch"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ kubectl-kruise rollout approve rollout/rollouts-demo -n default\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Wait a while, we will see the Deployment status show all ",(0,s.jsx)(t.strong,{children:"10 Pod"})," is upgraded.\n",(0,s.jsx)(t.img,{src:n(86817).A+"",width:"1560",height:"394"})]}),"\n",(0,s.jsx)(t.h2,{id:"how-to-continue-the-next-step-manually",children:"How to continue the next step manually?"}),"\n",(0,s.jsxs)(t.p,{children:["Currently, there are two methods. For example, ",(0,s.jsx)(t.strong,{children:"if you have completed the first batch and want to send the second batch:"})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Method one:"})," You can set the ",(0,s.jsx)(t.code,{children:"pause.duration"})," field of the first batch to ",(0,s.jsx)(t.code,{children:"duration:0"}),", which will automatically enter the next batch."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Method two:"})," You can update the ",(0,s.jsx)(t.code,{children:"rollout.status.canaryStatus.currentStepState"})," field to ",(0,s.jsx)(t.code,{children:'"StepReady"'}),", which will also automatically enter the next batch."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Each method has its own ",(0,s.jsx)(t.strong,{children:"advantages"})," and ",(0,s.jsx)(t.strong,{children:"disadvantages"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"For method one"}),", it can ensure the idempotence of your operation, but you need to reset the strategy of the rollout back to its original state (e.g., reset the duration field to nil) before the next release."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"kind: Rollout\nspec:\n  strategy:\n    canary:\n      steps:\n      - replicas: 1\n        pause:\n          duration: 0\n      - ... ...\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"For method two"}),", you don't need to change anything before the next release. However, before confirming, you need to check the status of Rollout and use the update interface instead of the patch interface of Kubernetes client, or use our  ",(0,s.jsx)(t.a,{href:"https://github.com/openkruise/kruise-tools",children:"kubectl-kruise"})," tools. For a detailed guide on all rollout-related commands like ",(0,s.jsx)(t.code,{children:"describe"}),", ",(0,s.jsx)(t.code,{children:"approve"}),", and ",(0,s.jsx)(t.code,{children:"undo"}),", please see the ",(0,s.jsx)(t.a,{href:"../cli-tool/kubectl-plugin.md#rollout",children:"Kubectl Plugin documentation"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ kubectl-kruise rollout approve rollout/<your-rollout-name> -n <your-rollout-namespace>\n"})}),"\n",(0,s.jsx)(t.h2,{id:"how-to-know-current-step-is-ready",children:"How to know current step is Ready?"}),"\n",(0,s.jsxs)(t.p,{children:["All status information about current step is recorded in ",(0,s.jsx)(t.code,{children:"status.canaryStatus"})," field of Rollout:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["if ",(0,s.jsx)(t.code,{children:"status.canaryStatus.CurrentStepIndex"})," does not equal to your expected step index, the current step is ",(0,s.jsx)(t.strong,{children:"NOT"})," ready."]}),"\n",(0,s.jsxs)(t.li,{children:["if ",(0,s.jsx)(t.code,{children:"status.canaryStatus.CurrentStepState"}),' does not equal to "StepReady" or "Complete", the current step is ',(0,s.jsx)(t.strong,{children:"NOT"})," ready."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'func IsRolloutCurrentStepReady(rollout *rolloutsv1beta1.Rollout, stepIndex int32) bool {\n\tif rollout.Status.CanaryStatus != nil {\n\t\tif rollout.Status.CanaryStatus.CurrentStepIndex != stepIndex {\n\t\t\treturn false\n        }\n\t\tswitch rollout.Status.CanaryStatus.CurrentSetpState {\n\t\tcase "StepReady", "Complete":\n            return true\n\t\t}\n\t}\n\treturn false\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["But in some automatic scenes(e.g. PaaS platform), before judging whether current step is ready, we should know whether the ",(0,s.jsx)(t.code,{children:"canaryStatus"})," is corresponding to the current rollout processes (Maybe it corresponds to the last rollout process).\nWe can use ",(0,s.jsx)(t.code,{children:"rollout-id"})," mechanism to solve this problem."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'func IsRolloutCurrentStepReady(workload appsv1.Deployment, rollout *rolloutsv1beta1.Rollout, stepIndex int32) bool {\n\tif rollout.Status.CanaryStatus != nil {\n\t\trolloutId := workload.Labels["rollouts.kruise.io/rollout-id"]\n\t\tif rolloutId != rollout.Status.CanaryStatus.ObservedRolloutID {\n\t\t\treturn false\n        }\n\t\tif rollout.Status.CanaryStatus.CurrentStepIndex != stepIndex {\n\t\t\treturn false\n\t\t}\n\t\tswitch rollout.Status.CanaryStatus.CurrentSetpState {\n\t\tcase "StepReady", "Complete":\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"how-to-examine-the-newly-deployed-pods",children:"How to examine the newly deployed pods"}),"\n",(0,s.jsxs)(t.p,{children:["One can examine the newly deployed pods by using ",(0,s.jsx)(t.code,{children:"kubectl kruise describe rollout"}),". Note that the command will show concise information about the rollout and list the newly deployed pods related to current step."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ kubectl kruise describe rollout rollouts-demo -n default\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example output:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Name:              rollouts-demo\nNamespace:         default\nStatus:            \u26a0 Progressing\nMessage:           Rollout is in step(1/3), and you need manually confirm to enter the next step\nStrategy:          Canary\n Step:             1/3\n Steps:\n  -  Replicas:     1\n     State:        StepPaused\n  -  Replicas:     2\n  -  Replicas:     3\nImages:            registry.cn-hangzhou.aliyuncs.com/acs-sample/nginx:latest\nCurrent Revision:  5555d6dcc8\nUpdate Revision:   579589c5cd\nReplicas:\n Desired:          4\n Updated:          1\n Current:          4\n Ready:            4\n Available:        4\nNAME                                     READY  BATCH ID  REVISION    AGE  RESTARTS  STATUS\nnginx-deployment-basic-579589c5cd-rx5nm  1/1    1         579589c5cd  22s  0         \u2714 Running\n"})}),"\n",(0,s.jsx)(t.p,{children:"alternatively, one can directly filter the pods using the following pod labels:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"rollouts.kruise.io/rollout-id"}),": used to identify different rollout actions. The value of this label comes from the label of the workload with the same name. If the ",(0,s.jsx)(t.code,{children:"rollouts.kruise.io/rollout-id"})," label does not exist in the workload, Kruise Rollout will generate one using the revision."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"rollouts.kruise.io/rollout-batch-id"}),": used to identify different steps. The value is a number that starts from 1."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"one can use the following command to filter the pods directly:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"% kubectl get pods -l rollouts.kruise.io/rollout-id=579589c5cd,rollouts.kruise.io/rollout-batch-id=1\nNAME                                      READY   STATUS    RESTARTS   AGE\nnginx-deployment-basic-579589c5cd-rx5nm   1/1     Running   0          18m\n\n"})}),"\n",(0,s.jsx)(t.h2,{id:"how-to-do-rollback",children:"How to do rollback?"}),"\n",(0,s.jsxs)(t.p,{children:["In fact, Kruise Rollout ",(0,s.jsx)(t.strong,{children:"DOES NOT"})," provide the ability to rollback directly. ",(0,s.jsx)(t.strong,{children:"Kruise Rollout prefers that users can rollback workload spec directly to rollback their application."})," When users need to rollback from \u201cversion-2\u201d to \u201dversion-1\u201c, Kruise Rollout will use the native rolling upgrade strategy to quickly rollback, instead of following the multi-batch checkpoint strategy."]}),"\n",(0,s.jsx)(t.h3,{id:"1-apply-your-old-version-yaml-to-kubernetes",children:"1. Apply your old version yaml to kubernetes"}),"\n",(0,s.jsxs)(t.p,{children:["If an anomaly is detected in the new version during the Rollout process, you can roll back to the previous version using the Deployment configuration. For example, deploy the deployment manifest of previous version using the command ",(0,s.jsx)(t.code,{children:"kubectl apply -f depolyment.yaml"})," without making any changes to the Rollout resource."]}),"\n",(0,s.jsx)(t.h3,{id:"2-gitops-sync-old-revision",children:"2. Gitops sync old revision"}),"\n",(0,s.jsx)(t.p,{children:"You can roll back by syncing the application's revision to the old version's commit.\nExecute the following command to synchronize the application to the old version, where revision is the tag of the old version."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"argocd app sync rollouts-demo --revision gitops-demo-version-stable\n"})}),"\n",(0,s.jsx)(t.p,{children:"expected output:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Project: default\nServer: https://192.168.XX.XX:6443\nNamespace: default\nURL: https://127.0.0.1:49922/applications/rollouts-demo\nRepo: https://github.com/Kuromesi/samples.git\nTarget: 616b4b6\nPath: gitops-demo\nSyncWindow: Sync Allowed\nSync Policy: <none>\nSync Status: Synced to 616b4b6\nHealth Status: Progressing\n\nOperation: Sync\nSync Revision: 616b4b6e010ba4d71a92c0e7d050162956b169b7\nPhase: Succeeded\nStart: 2023-08-07 16:52:53 +0800 CST\nFinished: 2023-08-07 16:52:54 +0800 CST\nDuration: 1s\nMessage: successfully synced (all tasks run)\n\nGROUP KIND NAMESPACE NAME STATUS HEALTH HOOK MESSAGE\n Service default echo-server Synced Healthy service/echo-server unchanged\napps Deployment default echo-server Synced Suspended deployment.apps/echo-server configured\nnetworking.k8s.io Ingress default ingress-demo Synced Progressing ingress.networking.k8s.io/ingress-demo unchanged\nrollouts.kruise.io Rollout default rollouts-demo Synced rollout.rollouts.kruise.io/rollouts-demo unchanged\n"})}),"\n",(0,s.jsx)(t.h3,{id:"3-use-kruise-tools",children:"3. Use kruise-tools"}),"\n",(0,s.jsxs)(t.p,{children:["kruise-tools is kubectl plugin for OpenKruise, which provides commandline tools for kruise features, such as kubectl-kruise, which is a standard plugin of kubectl.\nYou can use the command ",(0,s.jsx)(t.code,{children:"kubectl kruise rollout undo rollout/rollout-demo"})," to roll back a workload, either during the rollout process or after the rollout has finished."]}),"\n",(0,s.jsx)(t.h2,{id:"other-statements",children:"Other Statements"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Continuous Release"}),': Assume that Rollout is progressing from "version-1" to "version-2"(uncompleted). Now, workload is modified to "version-3", Rollout will start to progress from beginning step (1-st step).']}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"HPA compatible"}),': Assume that you config HPA to your workload and use multi-batch update strategy, we suggest to use "Percent" to specify "steps[x].replicas". If replicas is scaled up/down during rollout progressing, the old and new version replicas will be scaled according the "Percent" configuration.']}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"optional-pausing-and-disabling-a-rollout",children:"Optional: Pausing and Disabling a Rollout"}),"\n",(0,s.jsx)(t.p,{children:"You can control the lifecycle of a rollout by pausing it during progression or disabling it after completion."}),"\n",(0,s.jsx)(t.h3,{id:"pausing-a-rollout-during-progression",children:"Pausing a Rollout (During Progression)"}),"\n",(0,s.jsx)(t.p,{children:"This is an optional step to halt the rollout process between steps, which is useful for manual checks or troubleshooting. The controller continues to watch the resource but will not proceed to the next step until the rollout is unpaused."}),"\n",(0,s.jsxs)(t.p,{children:["To pause an in-progress rollout, patch the ",(0,s.jsx)(t.code,{children:"spec.strategy.paused"})," field to ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# Pause the current rollout\nkubectl patch rollout rollouts-demo --type merge -p \'{"spec":{"strategy":{"paused":true}}}\'\n\n# To resume, set the field back to false\nkubectl patch rollout rollouts-demo --type merge -p \'{"spec":{"strategy":{"paused":false}}}\'\n'})}),"\n",(0,s.jsx)(t.h3,{id:"disabling-a-rollout-after-completion",children:"Disabling a Rollout (After Completion)"}),"\n",(0,s.jsx)(t.p,{children:"After a rollout has successfully finished, you may want to stop the Kruise Rollout controller from managing the object entirely without deleting it. This is recommended over deleting the Rollout object because it makes debugging easier and simplifies re-enabling progressive delivery later."}),"\n",(0,s.jsxs)(t.p,{children:["To disable a completed rollout, patch the ",(0,s.jsx)(t.code,{children:"spec.disabled"})," field to ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'# Disable the rollout after it has finished\nkubectl patch rollout rollouts-demo --type merge -p \'{"spec":{"disabled":true}}\'\n\n# To re-enable, set the field back to false\nkubectl patch rollout rollouts-demo --type merge -p \'{"spec":{"disabled":false}}\'\n'})})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(96540);const s={},l=o.createContext(s);function r(e){const t=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(l.Provider,{value:t},e.children)}},50044:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/basic-2nd-batch-c101777d8ae2c5b4896022518aae360c.jpg"},65537:(e,t,n)=>{n.d(t,{A:()=>k});var o=n(96540),s=n(34164),l=n(65627),r=n(56347),a=n(50372),i=n(30604),u=n(11861),c=n(78749);function d(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:s}}=e;return{value:t,label:n,attributes:o,default:s}}))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const s=(0,r.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i.aZ)(l),(0,o.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(s.location.search);t.set(l,e),s.replace({...s.location,search:t.toString()})}),[l,s])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,l=h(e),[r,i]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:l}))),[u,d]=m({queryString:n,groupId:s}),[g,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,l]=(0,c.Dv)(n);return[s,(0,o.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:s}),x=(()=>{const e=u??g;return p({value:e,tabValues:l})?e:null})();(0,a.A)((()=>{x&&i(x)}),[x]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),b(e)}),[d,b,l]),tabValues:l}}var b=n(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(74848);function y(e){let{className:t,block:n,selectedValue:o,selectValue:r,tabValues:a}=e;const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.a_)(),c=e=>{const t=e.currentTarget,n=i.indexOf(t),s=a[n].value;s!==o&&(u(t),r(s))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:a.map((e=>{let{value:t,label:n,attributes:l}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,ref:e=>{i.push(e)},onKeyDown:d,onClick:c,...l,className:(0,s.A)("tabs__item",x.tabItem,l?.className,{"tabs__item--active":o===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:l}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===l));return e?(0,o.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==l})))})}function v(e){const t=g(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,f.jsx)(y,{...t,...e}),(0,f.jsx)(j,{...t,...e})]})}function k(e){const t=(0,b.A)();return(0,f.jsx)(v,{...e,children:d(e.children)},String(t))}},79329:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var o=n(34164);const s={tabItem:"tabItem_Ymn6"};var l=n(74848);function r(e){let{children:t,hidden:n,className:r}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,o.A)(s.tabItem,r),hidden:n,children:t})}},86817:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/basic-3rd-batch-8c5da0186f4ebb578c4f44787d1c65aa.jpg"},99924:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/basic-1st-batch-2d4dd66aea0d6933125c38b15e35dc8d.jpg"}}]);