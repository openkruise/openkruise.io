"use strict";(self.webpackChunkopenkruise_io=self.webpackChunkopenkruise_io||[]).push([[6268],{10729:e=>{e.exports=JSON.parse('{"permalink":"/blog/openkruise-0.10.0","editUrl":"https://github.com/openkruise/openkruise.io/edit/master/blog/2021-09-06-release-0.10.0.md","source":"@site/blog/2021-09-06-release-0.10.0.md","title":"OpenKruise 0.10.0, New features of multi-domain management, application protection","description":"On Sep 6th, 2021, OpenKruise released the latest version v0.10.0, with new features, such as WorkloadSpread and PodUnavailableBudget. This article provides an overview of this new version.","date":"2021-09-06T00:00:00.000Z","tags":[{"inline":true,"label":"release","permalink":"/blog/tags/release"}],"readingTime":4.67,"hasTruncateMarker":false,"authors":[{"name":"Siyu Wang","title":"Maintainer of OpenKruise","url":"https://github.com/FillZpp","imageURL":"https://github.com/FillZpp.png","key":"FillZpp","page":null}],"frontMatter":{"slug":"openkruise-0.10.0","title":"OpenKruise 0.10.0, New features of multi-domain management, application protection","authors":["FillZpp"],"tags":["release"]},"unlisted":false,"prevItem":{"title":"WorkloadSpread - Interpretation for OpenKruise v0.10.0 new feature","permalink":"/blog/workloadspread"},"nextItem":{"title":"OpenKruise 0.9.0, SidecarSet Helps Mesh Container Hot Upgrade","permalink":"/blog/sidecarset-hotupdate"}}')},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(96540);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}},84440:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var a=t(10729),o=t(74848),i=t(28453);const r={slug:"openkruise-0.10.0",title:"OpenKruise 0.10.0, New features of multi-domain management, application protection",authors:["FillZpp"],tags:["release"]},s=void 0,l={authorsImageUrls:[void 0]},d=[{value:"WorkloadSpread",id:"workloadspread",level:2},{value:"PodUnavailableBudget",id:"podunavailablebudget",level:2},{value:"CloneSet supports scaledown priority by Spread Constraints",id:"cloneset-supports-scaledown-priority-by-spread-constraints",level:2},{value:"Advanced StatefulSet supports scaleup with rate limit",id:"advanced-statefulset-supports-scaleup-with-rate-limit",level:2},{value:"More",id:"more",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"On Sep 6th, 2021, OpenKruise released the latest version v0.10.0, with new features, such as WorkloadSpread and PodUnavailableBudget. This article provides an overview of this new version."}),"\n",(0,o.jsx)(n.h2,{id:"workloadspread",children:"WorkloadSpread"}),"\n",(0,o.jsx)(n.p,{children:"WorkloadSpread can distribute Pods of workload to different types of Node according to some polices, which empowers single workload the abilities for\nmulti-domain deployment and elastic deployment."}),"\n",(0,o.jsx)(n.p,{children:"Some common policies include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"fault toleration spread (for example, spread evenly among hosts, az, etc)"}),"\n",(0,o.jsx)(n.li,{children:"spread according to the specified ratio (for example, deploy Pod to several specified az according to the proportion)"}),"\n",(0,o.jsxs)(n.li,{children:["subset management with priority, such as","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"deploy Pods to ecs first, and then deploy to eci when its resources are insufficient."}),"\n",(0,o.jsx)(n.li,{children:"deploy a fixed number of Pods to ecs first, and the rest Pods are deployed to eci."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["subset management with customization, such as","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"control how many pods in a workload are deployed in different cpu arch"}),"\n",(0,o.jsx)(n.li,{children:"enable pods in different cpu arch to have different resource requirements"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The feature of WorkloadSpread is similar with ",(0,o.jsx)(n.strong,{children:"UnitedDeployment"})," in OpenKruise community. Each WorkloadSpread defines multi-domain\ncalled ",(0,o.jsx)(n.code,{children:"subset"}),". Each domain may provide the limit to run the replicas number of pods called ",(0,o.jsx)(n.code,{children:"maxReplicas"}),".\nWorkloadSpread injects the domain configuration into the Pod by Webhook, and it also controls the order of scale in and scale out."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps.kruise.io/v1alpha1\nkind: WorkloadSpread\nmetadata:\n  name: workloadspread-demo\nspec:\n  targetRef:\n    apiVersion: apps/v1 | apps.kruise.io/v1alpha1\n    kind: Deployment | CloneSet\n    name: workload-xxx\n  subsets:\n  - name: subset-a\n    requiredNodeSelectorTerm:\n      matchExpressions:\n      - key: topology.kubernetes.io/zone\n        operator: In\n        values:\n        - zone-a\n    maxReplicas: 10 | 30%\n  - name: subset-b\n    requiredNodeSelectorTerm:\n      matchExpressions:\n      - key: topology.kubernetes.io/zone\n        operator: In\n        values:\n        - zone-b\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The WorkloadSpread is related to a Workload via ",(0,o.jsx)(n.code,{children:"targetRef"}),". When a Pod is created by the Workload, it will be injected topology policies by Kruise according to the rules in WorkloadSpread."]}),"\n",(0,o.jsxs)(n.p,{children:["Note that WorkloadSpread uses ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/reference/labels-annotations-taints/#pod-deletion-cost",children:"Pod Deletion Cost"})," to control the priority of scale down. So:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"If the Workload type is CloneSet, it already supports the feature."}),"\n",(0,o.jsx)(n.li,{children:"If the Workload type is Deployment or ReplicaSet, it requires your Kubernetes version >= 1.22."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Also you have to enable ",(0,o.jsx)(n.code,{children:"WorkloadSpread"})," feature-gate when you install or upgrade Kruise."]}),"\n",(0,o.jsx)(n.h2,{id:"podunavailablebudget",children:"PodUnavailableBudget"}),"\n",(0,o.jsxs)(n.p,{children:["Kubernetes offers ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/run-application/configure-pdb/",children:"Pod Disruption Budget"})," to help you run highly available applications even when you introduce frequent ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",children:"voluntary disruptions"}),".\nPDB limits the number of Pods of a replicated application that are down simultaneously from voluntary disruptions. However, it can only constrain the voluntary disruption triggered by the ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/safely-drain-node/#eviction-api",children:"Eviction API"}),".\nFor example, when you run kubectl drain, the tool tries to evict all of the Pods on the Node you're taking out of service."]}),"\n",(0,o.jsx)(n.p,{children:"In the following voluntary disruption scenarios, there are still business disruption or SLA degradation situations:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["The application owner update deployment's pod template for general upgrading, while cluster administrator drain nodes to scale the cluster down(learn about ",(0,o.jsx)(n.a,{href:"https://github.com/kubernetes/autoscaler/#readme",children:"Cluster Autoscaling"}),")."]}),"\n",(0,o.jsx)(n.li,{children:"The middleware team is using SidecarSet to rolling upgrade the sidecar containers of the cluster, e.g. ServiceMesh envoy, while HPA triggers the scale-down of business applications."}),"\n",(0,o.jsx)(n.li,{children:"The application owner and middleware team release the same Pods at the same time based on OpenKruise cloneSet, sidecarSet in-place upgrades"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"In voluntary disruption scenarios, PodUnavailableBudget can achieve the effect of preventing application disruption or SLA degradation, which greatly improves the high availability of application services."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps.kruise.io/v1alpha1\nkind: PodUnavailableBudget\nmetadata:\n  name: web-server-pub\n  namespace: web\nspec:\n  targetRef:\n    apiVersion: apps/v1 | apps.kruise.io/v1alpha1\n    kind: Deployment | CloneSet | StatefulSet | ...\n    name: web-server\n  # selector label query over pods managed by the budget\n  # selector and TargetReference are mutually exclusive, targetRef is priority to take effect.\n  # selector is commonly used in scenarios where applications are deployed using multiple workloads,\n  # and targetRef is used for protection against a single workload.\n# selector:\n#   matchLabels:\n#     app: web-server\n  # maximum number of Pods unavailable for the current cloneset, the example is cloneset.replicas(5) * 60% = 3\n  # maxUnavailable and minAvailable are mutually exclusive, maxUnavailable is priority to take effect\n  maxUnavailable: 60%\n  # Minimum number of Pods available for the current cloneset, the example is cloneset.replicas(5) * 40% = 2\n# minAvailable: 40%\n"})}),"\n",(0,o.jsx)(n.p,{children:"You have to enable the feature-gates when install or upgrade Kruise:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"PodUnavailableBudgetDeleteGate: protect Pod deletion or eviction."}),"\n",(0,o.jsx)(n.li,{children:"PodUnavailableBudgetUpdateGate: protect Pod update operations, such as in-place update."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"cloneset-supports-scaledown-priority-by-spread-constraints",children:"CloneSet supports scaledown priority by Spread Constraints"}),"\n",(0,o.jsxs)(n.p,{children:["When ",(0,o.jsx)(n.code,{children:"replicas"})," of a CloneSet decreased, it has the arithmetic to choose Pods and delete them."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Node unassigned < assigned"}),"\n",(0,o.jsx)(n.li,{children:"PodPending < PodUnknown < PodRunning"}),"\n",(0,o.jsx)(n.li,{children:"Not ready < ready"}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Lower pod-deletion cost < higher pod-deletion-cost"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Higher spread rank < lower spread rank"})}),"\n",(0,o.jsx)(n.li,{children:"Been ready for empty time < less time < more time"}),"\n",(0,o.jsx)(n.li,{children:"Pods with containers with higher restart counts < lower restart counts"}),"\n",(0,o.jsx)(n.li,{children:"Empty creation time pods < newer pods < older pods"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:['"4" has provided in Kruise v0.9.0 and it is also used by WorkloadSpread to control the Pod deletion. ',(0,o.jsx)(n.strong,{children:'"5" is added in Kruise v0.10.0 to sort Pods by their Topology Spread Constraints during scaledown.'})]}),"\n",(0,o.jsx)(n.h2,{id:"advanced-statefulset-supports-scaleup-with-rate-limit",children:"Advanced StatefulSet supports scaleup with rate limit"}),"\n",(0,o.jsxs)(n.p,{children:["To avoid a large amount of failed Pods after user created an incorrect Advanced StatefulSet, Kruise add a ",(0,o.jsx)(n.code,{children:"maxUnavailable"})," field into its ",(0,o.jsx)(n.code,{children:"scaleStrategy"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps.kruise.io/v1beta1\nkind: StatefulSet\nspec:\n  # ...\n  replicas: 100\n  scaleStrategy:\n    maxUnavailable: 10% # percentage or absolute number\n"})}),"\n",(0,o.jsx)(n.p,{children:"When the field is set, Advanced StatefulSet will guarantee that the number of unavailable Pods should not bigger than the strategy number during Pod creation."}),"\n",(0,o.jsxs)(n.p,{children:["Note that the feature can only be used in StatefulSet with ",(0,o.jsx)(n.code,{children:"podManagementPolicy=Parallel"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"more",children:"More"}),"\n",(0,o.jsxs)(n.p,{children:["For more changes, please refer to the ",(0,o.jsx)(n.a,{href:"https://github.com/openkruise/kruise/releases",children:"release page"})," or ",(0,o.jsx)(n.a,{href:"https://github.com/openkruise/kruise/blob/master/CHANGELOG.md",children:"ChangeLog"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);